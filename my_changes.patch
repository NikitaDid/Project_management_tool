From ed1e37107930945ca1780ab704672fc0528e788f Mon Sep 17 00:00:00 2001
From: Nikita <nikitadidenko222@gmail.com>
Date: Mon, 29 Sep 2025 16:30:49 +0200
Subject: [PATCH 1/3] Initial project setup

---
 .gitignore                           |  17 ++++
 apps/projects/__init__.py            |   0
 apps/projects/admin.py               |   3 +
 apps/projects/apps.py                |   6 ++
 apps/projects/migrations/__init__.py |   0
 apps/projects/models.py              |   3 +
 apps/projects/tests.py               |   3 +
 apps/projects/views.py               |   3 +
 apps/users/__init__.py               |   0
 apps/users/admin.py                  |   3 +
 apps/users/apps.py                   |   6 ++
 apps/users/migrations/__init__.py    |   0
 apps/users/models.py                 |   3 +
 apps/users/tests.py                  |   3 +
 apps/users/views.py                  |   3 +
 config/__init__.py                   |   0
 config/asgi.py                       |  16 ++++
 config/settings.py                   | 128 +++++++++++++++++++++++++++
 config/urls.py                       |  24 +++++
 config/wsgi.py                       |  16 ++++
 manage.py                            |  22 +++++
 requirements.txt                     |   5 ++
 22 files changed, 264 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 apps/projects/__init__.py
 create mode 100644 apps/projects/admin.py
 create mode 100644 apps/projects/apps.py
 create mode 100644 apps/projects/migrations/__init__.py
 create mode 100644 apps/projects/models.py
 create mode 100644 apps/projects/tests.py
 create mode 100644 apps/projects/views.py
 create mode 100644 apps/users/__init__.py
 create mode 100644 apps/users/admin.py
 create mode 100644 apps/users/apps.py
 create mode 100644 apps/users/migrations/__init__.py
 create mode 100644 apps/users/models.py
 create mode 100644 apps/users/tests.py
 create mode 100644 apps/users/views.py
 create mode 100644 config/__init__.py
 create mode 100644 config/asgi.py
 create mode 100644 config/settings.py
 create mode 100644 config/urls.py
 create mode 100644 config/wsgi.py
 create mode 100755 manage.py
 create mode 100644 requirements.txt

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..3c3214d
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,17 @@
+.venv/
+venv/
+env/
+.env
+.env.local
+.idea/
+
+__pycache__/
+*.pyc
+*.pyo
+*.pyd
+
+db.sqlite3
+*.sqlite3
+
+media/
+staticfiles/
diff --git a/apps/projects/__init__.py b/apps/projects/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/apps/projects/admin.py b/apps/projects/admin.py
new file mode 100644
index 0000000..8c38f3f
--- /dev/null
+++ b/apps/projects/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/apps/projects/apps.py b/apps/projects/apps.py
new file mode 100644
index 0000000..afae498
--- /dev/null
+++ b/apps/projects/apps.py
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class ProjectsConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'projects'
diff --git a/apps/projects/migrations/__init__.py b/apps/projects/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/apps/projects/models.py b/apps/projects/models.py
new file mode 100644
index 0000000..71a8362
--- /dev/null
+++ b/apps/projects/models.py
@@ -0,0 +1,3 @@
+from django.db import models
+
+# Create your models here.
diff --git a/apps/projects/tests.py b/apps/projects/tests.py
new file mode 100644
index 0000000..7ce503c
--- /dev/null
+++ b/apps/projects/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/apps/projects/views.py b/apps/projects/views.py
new file mode 100644
index 0000000..91ea44a
--- /dev/null
+++ b/apps/projects/views.py
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
diff --git a/apps/users/__init__.py b/apps/users/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/apps/users/admin.py b/apps/users/admin.py
new file mode 100644
index 0000000..8c38f3f
--- /dev/null
+++ b/apps/users/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/apps/users/apps.py b/apps/users/apps.py
new file mode 100644
index 0000000..72b1401
--- /dev/null
+++ b/apps/users/apps.py
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class UsersConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'users'
diff --git a/apps/users/migrations/__init__.py b/apps/users/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/apps/users/models.py b/apps/users/models.py
new file mode 100644
index 0000000..71a8362
--- /dev/null
+++ b/apps/users/models.py
@@ -0,0 +1,3 @@
+from django.db import models
+
+# Create your models here.
diff --git a/apps/users/tests.py b/apps/users/tests.py
new file mode 100644
index 0000000..7ce503c
--- /dev/null
+++ b/apps/users/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/apps/users/views.py b/apps/users/views.py
new file mode 100644
index 0000000..91ea44a
--- /dev/null
+++ b/apps/users/views.py
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
diff --git a/config/__init__.py b/config/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/config/asgi.py b/config/asgi.py
new file mode 100644
index 0000000..4f86767
--- /dev/null
+++ b/config/asgi.py
@@ -0,0 +1,16 @@
+"""
+ASGI config for config projects.
+
+It exposes the ASGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/5.2/howto/deployment/asgi/
+"""
+
+import os
+
+from django.core.asgi import get_asgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
+
+application = get_asgi_application()
diff --git a/config/settings.py b/config/settings.py
new file mode 100644
index 0000000..910b109
--- /dev/null
+++ b/config/settings.py
@@ -0,0 +1,128 @@
+"""
+Django settings for config projects.
+
+Generated by 'django-admin startproject' using Django 5.2.6.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/5.2/topics/settings/
+
+For the full list of settings and their values, see
+https://docs.djangoproject.com/en/5.2/ref/settings/
+"""
+
+from pathlib import Path
+import sys
+
+# Build paths inside the projects like this: BASE_DIR / 'subdir'.
+BASE_DIR = Path(__file__).resolve().parent.parent
+
+sys.path.insert(0, 'apps')
+
+# Quick-start development settings - unsuitable for production
+# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/
+
+# SECURITY WARNING: keep the secret key used in production secret!
+SECRET_KEY = 'django-insecure-%zar16o)!op3-h3_f0&841oowisn-5)o^dl)6&(@7^#j@szlej'
+
+# SECURITY WARNING: don't run with debug turned on in production!
+DEBUG = True
+
+ALLOWED_HOSTS = []
+
+# Application definition
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+
+    'apps.users',
+    'apps.projects'
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'project_manager.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'config.wsgi.application'
+
+# Database
+# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.postgresql',
+        'NAME': 'myprojectdb',
+        'USER': 'myprojectuser',
+        'PASSWORD': 'mypassword',
+        'HOST': 'localhost',
+        'PORT': '5432',
+    }
+}
+
+# Password validation
+# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+# Internationalization
+# https://docs.djangoproject.com/en/5.2/topics/i18n/
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_TZ = True
+
+# Static files (CSS, JavaScript, Images)
+# https://docs.djangoproject.com/en/5.2/howto/static-files/
+
+STATIC_URL = 'static/'
+
+# Default primary key field type
+# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
+
+DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
+
+
diff --git a/config/urls.py b/config/urls.py
new file mode 100644
index 0000000..23994a8
--- /dev/null
+++ b/config/urls.py
@@ -0,0 +1,24 @@
+"""
+URL configuration for config projects.
+
+The `urlpatterns` list routes URLs to views. For more information please see:
+    https://docs.djangoproject.com/en/5.2/topics/http/urls/
+Examples:
+Function views
+    1. Add an import:  from my_app import views
+    2. Add a URL to urlpatterns:  path('', views.home, name='home')
+Class-based views
+    1. Add an import:  from other_app.views import Home
+    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
+Including another URLconf
+    1. Import the include() function: from django.urls import include, path
+    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
+"""
+from django.contrib import admin
+from django.urls import path, include
+from . import views
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+    path('', views.home),
+]
diff --git a/config/wsgi.py b/config/wsgi.py
new file mode 100644
index 0000000..c66986c
--- /dev/null
+++ b/config/wsgi.py
@@ -0,0 +1,16 @@
+"""
+WSGI config for config projects.
+
+It exposes the WSGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/5.2/howto/deployment/wsgi/
+"""
+
+import os
+
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
+
+application = get_wsgi_application()
diff --git a/manage.py b/manage.py
new file mode 100755
index 0000000..8e7ac79
--- /dev/null
+++ b/manage.py
@@ -0,0 +1,22 @@
+#!/usr/bin/env python
+"""Django's command-line utility for administrative tasks."""
+import os
+import sys
+
+
+def main():
+    """Run administrative tasks."""
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+
+if __name__ == '__main__':
+    main()
diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 0000000..6276b31
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1,5 @@
+asgiref==3.9.1
+Django==5.2.6
+psycopg2==2.9.10
+psycopg2-binary==2.9.10
+sqlparse==0.5.3
-- 
2.43.0


From 52e46bceee9667841523a7c24e680b92848cb78f Mon Sep 17 00:00:00 2001
From: Nikita <nikitadidenko222@gmail.com>
Date: Wed, 1 Oct 2025 20:37:38 +0200
Subject: [PATCH 2/3] Test message

---
 testfile | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 testfile

diff --git a/testfile b/testfile
new file mode 100644
index 0000000..f03d2a3
--- /dev/null
+++ b/testfile
@@ -0,0 +1 @@
+Some test text
\ No newline at end of file
-- 
2.43.0


From b0bcddb44966b460332afd8bf70235de4b101c28 Mon Sep 17 00:00:00 2001
From: Nikita <nikitadidenko222@gmail.com>
Date: Wed, 1 Oct 2025 20:48:57 +0200
Subject: [PATCH 3/3] testing commit

---
 testfile | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/testfile b/testfile
index f03d2a3..4da1c54 100644
--- a/testfile
+++ b/testfile
@@ -1 +1 @@
-Some test text
\ No newline at end of file
+Some test textdsfjdsnglasbgldihg
\ No newline at end of file
-- 
2.43.0

